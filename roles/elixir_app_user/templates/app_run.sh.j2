#!/bin/bash

# Script to quickly run a command against the active app

set -euo pipefail

# Helpers ----------------------------------------------------------------------
# Print messages in bold and red
function pretty_red() {
  printf "\033[1m\033[0;31m$1\033[0m\n"
}

# Determine active service -----------------------------------------------------
function determine_active_service() {
  ACTIVE_SERVICE_FILE_PATH="/etc/{{ elixir_app.name }}/active_service"
  ACTIVE_SERVICE=

  # If no active service was configured yet (i.e. first deploy) then use "blue"
  if [ ! -f "$ACTIVE_SERVICE_FILE_PATH" ]; then
    pretty_red "No active service defined. Did you deploy yet?"
    exit
  fi

  read -r ACTIVE_SERVICE < "$ACTIVE_SERVICE_FILE_PATH"
}
# HELPERS ----------------------------------------------------------------------

determine_active_service

set -o allexport
. /etc/{{ elixir_app.name }}/{{ elixir_app.name }}_"${ACTIVE_SERVICE}"_env
set +o allexport

APP_ROOT="/srv/app/{{ elixir_app.name }}_${ACTIVE_SERVICE}"

if systemctl is-active --quiet "{{ elixir_app.name }}_${ACTIVE_SERVICE}.service"; then
  "$APP_ROOT/bin/{{ elixir_app.name }}" "$@"
else
 pretty_red "{{ elixir_app.name }}_${ACTIVE_SERVICE}.service is NOT running..."
fi
