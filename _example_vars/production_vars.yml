---
# You'll want to change the variables marked as "CHANGE ME"
# Other variables can be changed as well, but these are the most common ones.

app_name: "my_app" # CHANGE ME
root_domain: "{{ app_name}}.com" # CHANGE ME
app_domain: "app.{{ root_domain }}" # CHANGE ME

sudo_users:
  - { name: "sudouser", shell: "/bin/bash", pubkey: "~/.ssh/id_rsa.pub" } # CHANGE ME

elixir_app:
  name: "{{ app_name }}"
  shell: "/bin/bash"
  env_template_path: "{{ './_example-env-template.j2' | realpath }}" # CHANGE ME
  blue_green_config:
      - { type: "blue", port: "4000" }
      - { type: "green", port: "4001" }

deploy:
  user: "deploy_{{ app_name }}"
  shell: "/bin/bash"
  pubkey: "~/.ssh/deploy_{{ app_name }}.pub" # CHANGE ME
  service_name: "{{ app_name }}"
  nginx_vhost: "{{ app_domain }}"
  # "shutdown_rpc" is run against the active node as first step in the blue/green
  #                switchover. Use this to prepare the node for shutdown, i.e.
  #                stop the job queue
  shutdown_rpc: "MyApp.ReleaseTasks.rpc_prepare_for_shutdown()" # CHANGE ME
  # "prepare_eval" is run before the new node is brought up, this is a good place
  #                to run migrations. Make sure your migrations do not mess with
  #                the old nodes ability to do its work as it is still running
  #                at this point!
  prepare_eval: "MyApp.ReleaseTasks.eval_run_migrations()" # CHANGE ME

postgres:
  version: 12
  user: "{{ app_name }}"
  db_name: "{{ app_name }}_prod"
  password: "{{ secrets_db_password }}" # (from  secrets.yml)

certs:
  domain: "{{ root_domain }}"
  # Staging server, you'll want to change this to the real server for production:
  # "https://acme-v02.api.letsencrypt.org/directory" (v02 required for wildcards)
  acme_server: "https://acme-staging-v02.api.letsencrypt.org/directory"
  gandi_api_key: "{{ secrets_gandi_api_key }}"
  email: "ssl@example.com" # CHANGE ME

nginx:
  proxy_configs:
    - { name: "{{ app_name }}" ,domain: "{{ app_domain }}", root_domain: "{{ root_domain }}", type: "blue", proxy_port: "4000" }
    - { name: "{{ app_name }}" ,domain: "{{ app_domain }}", root_domain: "{{ root_domain }}", type: "green", proxy_port: "4001" }
